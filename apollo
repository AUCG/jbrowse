#!/bin/bash

function usage(){
    echo "";
    echo "Usage: apollo <command>";
    echo "";
    echo "Commands:";
    echo "";
    echo "deploy:    Builds Unoptimized war file (no processing of javascript) into the target directory.";
    echo "run:       Runs from current directory debug mode (non-minimized javascript).";
    echo "test:      Runs test-suite.";
    echo "debug:     Runs from current directory in debug mode (non-minimized javascript).";
    #echo "release:   Builds in release mode (minimized javascript). (advanced)";
    echo "compile:   Compiled the build.";
    echo "clean:     Removes class files.";
    echo "clean-all: Removes class files and jbrowse files.";
    echo "help:      This message.";
};

if [[ $# == 0 || $1 == help || $1 == --help ]]; then
   usage
   exit 1;
fi

function check_configs(){
	if [ ! -e "./config.xml" ]; then
	   echo "No config.xml found, exiting."
	   echo "You must copy and sample_config.xml to config.xml in order to build."
	   exit 1;
	fi

	if [ ! -e "./canned_comments.xml" ]; then
	   echo "No canned_comments.xml found, exiting."
	   echo "You must copy and sample_canned_comments.xml to canned_comments.xml in order to build."
	   exit 1;
	fi

	if [ ! -e "./config.properties" ]; then
	   echo "No config.properties found, exiting."
	   echo "You must copy and sample_config.properties to config.properties in order to build."
	   exit 1;
	fi
}

if [[ $1 == "run" ]];then
    # should call the copy target first
    check_configs
    mvn tomcat7:run
elif [[ $1 == "debug" ]];then
    # TODO: feel like there is a better way to do this
    OLD_MAVEN_OPTS=$MAVEN_OPTS
    check_configs
    export MAVEN_OPTS=-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n
    mvn tomcat7:run
    export MAVEN_OPTS=$OLD_MAVEN_OPTS
    unset OLD_MAVEN_OPTS
elif [[ $1 == "test" ]];then
    # should call the copy target first
    mvn test
elif [[ $1 == "deploy" ]];then
    # should call the copy target first
    check_configs
    mvn package
elif [[ $1 == "release" ]];then
    # should call the copy target first
    #check_configs
    make -f build/Makefile release
    make -f build/Makefile create-precompiled
elif [[ $1 == "compile" ]];then
    # should call the copy target first
    mvn compile
elif [[ $1 == "clean-all" ]];then
    # should call the copy target first
    rm -rf bin
    rm -rf jbrowse-download
    rm -rf src/main/webapp/jbrowse
    rm -f *.zip
     # remove in webapp, as well? 
    mvn clean
elif [[ $1 == "clean" ]];then
    # should call the copy target first
    mvn clean
else
    usage
fi
