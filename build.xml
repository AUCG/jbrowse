<project>

    <!--BASEDIR = $(PWD)-->
    <!--APOLLO_ROOT_DIRECTORY=$(BASEDIR)-->
    <!--APOLLO_BUILD_DIRECTORY=$(APOLLO_ROOT_DIRECTORY)-->
    <!--APOLLO_WEBAPP_DIRECTORY=$(APOLLO_ROOT_DIRECTORY)/src/main/webapp-->
    <!--APOLLO_JBROWSE_DIRECTORY=$(APOLLO_WEBAPP_DIRECTORY)/jbrowse-->
    <!--JBROWSE_GIT_DIRECTORY=$(APOLLO_ROOT_DIRECTORY)/jbrowse-github-->
    <!--JBROWSE_GITHUB=https://github.com/GMOD/jbrowse-->
    <!--JBROWSE_VERSION=dev-->
    <!--GIT_VERSION=`git rev-parse \-\-verify HEAD`-->
    <!--POM_VERSION=`mvn validate | grep Building | cut -d' ' -f4`-->

    <target name="hello">
        <echo>Hello again!</echo>
    </target>

    <target name="run">
        <!--mvn tomcat7:run-->
    </target>

    <target name="version">
        <!--echo "<a href='https://github.com/GMOD/Apollo/commit/$(GMOD_VERSION)' target='_blank'>Version: $(POM_VERSION)</a>" > $(APOLLO_WEBAPP_DIRECTORY)/version.jsp-->
    </target>

    <target name="copy-web-apollo-plugin">
        <!--cp -R $(APOLLO_ROOT_DIRECTORY)/client/apollo $(JBROWSE_GIT_DIRECTORY)/plugins/WebApollo-->
    </target>

    <!--package: copy-webapollo-config-->
    <!--mvn package-->
    <!--release: download-jbrowse copy-webapollo-plugin version build-jbrowse-->
    <!--mv $(JBROWSE_GIT_DIRECTORY)/JBrowse-$(JBROWSE_VERSION) $(APOLLO_JBROWSE_DIRECTORY)-->
    <!--debug: download-jbrowse copy-webapollo-plugin version build-jbrowse-->
    <!--mv $(JBROWSE_GIT_DIRECTORY)/JBrowse-$(JBROWSE_VERSION)-dev $(APOLLO_JBROWSE_DIRECTORY)-->
    <!--unoptimized: download-jbrowse copy-webapollo-plugin version-->
    <!--cp -R $(JBROWSE_GIT_DIRECTORY) $(APOLLO_JBROWSE_DIRECTORY) && rm -rf $(APOLLO_JBROWSE_DIRECTORY)/.git-->
    <!--build-jbrowse:-->
    <!--ulimit -n 1000;cd $(JBROWSE_GIT_DIRECTORY)&&$(MAKE) -f build/Makefile release-notest-->

    <!--clean: clean-webapp-->
    <!--mvn clean-->
    <!--clean-webapp:-->
    <!--rm -rf $(APOLLO_JBROWSE_DIRECTORY)-->
    <!--clean-repos: clean-->
    <!--rm -rf $(JBROWSE_GIT_DIRECTORY)-->
    <!--clean-jbrowse-repo: clean-->
    <!--cd $(JBROWSE_GIT_DIRECTORY)&&$(MAKE) -f build/Makefile superclean-->
    <!--test:-->
    <!--mvn test-->
    <!--test-jbrowse:-->
    <!--cd $(JBROWSE_GIT_DIRECTORY)&&prove -I $(JBROWSE_GIT_DIRECTORY)/src/perl5/ -r $(JBROWSE_GIT_DIRECTORY)/tests/perl_tests-->

    <target name="download-jbrowse">
        <!--test -d $(JBROWSE_GIT_DIRECTORY) || git clone \-\-recursive $(JBROWSE_GITHUB) $(JBROWSE_GIT_DIRECTORY)-->
    </target>

    <target name="copy-web-apollo-config">
        <!--if [ -e $(APOLLO_ROOT_DIRECTORY)/config.xml ]; then cp $(APOLLO_ROOT_DIRECTORY)/config.xml $(APOLLO_WEBAPP_DIRECTORY)/config/config.xml; \-->
        <!--else echo "no config.xml found"; fi;-->
        <!--if [ -e $(APOLLO_ROOT_DIRECTORY)/config.properties ]; then cp $(APOLLO_ROOT_DIRECTORY)/config.properties $(APOLLO_WEBAPP_DIRECTORY)/config/config.properties; \-->
        <!--else echo "no config.properties found"; fi;-->
        <!--if [ -e $(APOLLO_ROOT_DIRECTORY)/blat_config.xml ]; then cp $(APOLLO_ROOT_DIRECTORY)/blat_config.xml $(APOLLO_WEBAPP_DIRECTORY)/config/blat_config.xml; \-->
        <!--else echo "no blat_config.xml found"; fi;-->
        <!--if [ -e $(APOLLO_ROOT_DIRECTORY)/hibernate.xml ]; then cp $(APOLLO_ROOT_DIRECTORY)/hibernate.xml $(APOLLO_WEBAPP_DIRECTORY)/config/hibernate.xml; \-->
        <!--else echo "no hibernate.xml found"; fi;-->
        <!--if [ -e $(APOLLO_ROOT_DIRECTORY)/log4j2.json ]; then cp $(APOLLO_ROOT_DIRECTORY)/log4j2.json $(APOLLO_WEBAPP_DIRECTORY)/src/main/resources/log4j2.json; \-->
        <!--else echo "no log4j2.json found"; fi;-->
        <!--if [ -e $(APOLLO_ROOT_DIRECTORY)/log4j2-test.json ]; then cp $(APOLLO_ROOT_DIRECTORY)/log4j2-test.json $(APOLLO_WEBAPP_DIRECTORY)/src/test/resources/log4j2-test.json; \-->
        <!--else echo "no log4j2-test.json found"; fi;-->

    </target>

    <target name="usage">
        <echo>
            Usage: build.sh [release|debug|github]
            Options:
            release: builds in release mode (minimized javascript)
            debug: builds in debug mode (non-minimized javascript)
            github: builds straight from github (no processing of javascript)
            clean: removes any existing jbrowse builds from build directory

            Additional environment variables:
            JBROWSE_GITHUB: URL of git repository for JBrowse ($JBROWSE_GITHUB)
            JBROWSE_RELEASE: Release tag, commit tag, or branch for JBrowse ($JBROWSE_RELEASE)
            JBROWSE_VERSION: Release version stored in package.json for JBrowse ($JBROWSE_VERSION)
            APOLLO_JBROWSE_GITHUB: Location of local JBrowse repo ($APOLLO_JBROWSE_GITHUB)
            APOLLO_ROOT_DIRECTORY: Location of local WebApollo repo ($APOLLO_ROOT_DIRECTORY)
        </echo>
    </target>

</project>